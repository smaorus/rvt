Terminals unused in grammar

   VERSION
   ENCODING


Grammar

    0 $accept: document $end

    1 document: prolog element misc_seq_opt

    2 prolog: XMLDecl_opt misc_seq_opt

    3 $@1: /* empty */

    4 $@2: /* empty */

    5 XMLDecl_opt: STARTXMLDECL $@1 attribute_seq_opt $@2 ENDPI
    6            | /* empty */

    7 misc_seq_opt: misc_seq_opt misc
    8             | /* empty */

    9 misc: COMMENT
   10     | PI

   11 PI: STARTPI NAME DATA ENDPI
   12   | STARTPI NAME ENDPI

   13 $@3: /* empty */

   14 element: START $@3 attribute_seq_opt empty_or_content

   15 empty_or_content: SLASH CLOSE

   16 $@4: /* empty */

   17 empty_or_content: CLOSE $@4 content END name_opt CLOSE

   18 content: content DATA
   19        | content misc

   20 $@5: /* empty */

   21 content: content $@5 element
   22        | /* empty */

   23 name_opt: NAME
   24         | /* empty */

   25 attribute_seq_opt: attribute_seq_opt attribute
   26                  | /* empty */

   27 attribute: NAME EQ VALUE


Terminals, with rules where they appear

$end (0) 0
error (256)
STARTXMLDECL (258) 5
VERSION (259)
STARTPI (260) 11 12
ENDPI (261) 5 11 12
EQ (262) 27
SLASH (263) 15
CLOSE (264) 15 17
END (265) 17
ENCODING (266)
NAME (267) 11 12 23 27
VALUE (268) 27
DATA (269) 11 18
COMMENT (270) 9
START (271) 14


Nonterminals, with rules where they appear

$accept (17)
    on left: 0
document (18)
    on left: 1, on right: 0
prolog (19)
    on left: 2, on right: 1
XMLDecl_opt (20)
    on left: 5 6, on right: 2
$@1 (21)
    on left: 3, on right: 5
$@2 (22)
    on left: 4, on right: 5
misc_seq_opt (23)
    on left: 7 8, on right: 1 2 7
misc (24)
    on left: 9 10, on right: 7 19
PI (25)
    on left: 11 12, on right: 10
element (26)
    on left: 14, on right: 1 21
$@3 (27)
    on left: 13, on right: 14
empty_or_content (28)
    on left: 15 17, on right: 14
$@4 (29)
    on left: 16, on right: 17
content (30)
    on left: 18 19 21 22, on right: 17 18 19 21
$@5 (31)
    on left: 20, on right: 21
name_opt (32)
    on left: 23 24, on right: 17
attribute_seq_opt (33)
    on left: 25 26, on right: 5 14 25
attribute (34)
    on left: 27, on right: 25


state 0

    0 $accept: . document $end

    STARTXMLDECL  shift, and go to state 1

    $default  reduce using rule 6 (XMLDecl_opt)

    document     go to state 2
    prolog       go to state 3
    XMLDecl_opt  go to state 4


state 1

    5 XMLDecl_opt: STARTXMLDECL . $@1 attribute_seq_opt $@2 ENDPI

    $default  reduce using rule 3 ($@1)

    $@1  go to state 5


state 2

    0 $accept: document . $end

    $end  shift, and go to state 6


state 3

    1 document: prolog . element misc_seq_opt

    START  shift, and go to state 7

    element  go to state 8


state 4

    2 prolog: XMLDecl_opt . misc_seq_opt

    $default  reduce using rule 8 (misc_seq_opt)

    misc_seq_opt  go to state 9


state 5

    5 XMLDecl_opt: STARTXMLDECL $@1 . attribute_seq_opt $@2 ENDPI

    $default  reduce using rule 26 (attribute_seq_opt)

    attribute_seq_opt  go to state 10


state 6

    0 $accept: document $end .

    $default  accept


state 7

   14 element: START . $@3 attribute_seq_opt empty_or_content

    $default  reduce using rule 13 ($@3)

    $@3  go to state 11


state 8

    1 document: prolog element . misc_seq_opt

    $default  reduce using rule 8 (misc_seq_opt)

    misc_seq_opt  go to state 12


state 9

    2 prolog: XMLDecl_opt misc_seq_opt .
    7 misc_seq_opt: misc_seq_opt . misc

    STARTPI  shift, and go to state 13
    COMMENT  shift, and go to state 14

    $default  reduce using rule 2 (prolog)

    misc  go to state 15
    PI    go to state 16


state 10

    5 XMLDecl_opt: STARTXMLDECL $@1 attribute_seq_opt . $@2 ENDPI
   25 attribute_seq_opt: attribute_seq_opt . attribute

    NAME  shift, and go to state 17

    $default  reduce using rule 4 ($@2)

    $@2        go to state 18
    attribute  go to state 19


state 11

   14 element: START $@3 . attribute_seq_opt empty_or_content

    $default  reduce using rule 26 (attribute_seq_opt)

    attribute_seq_opt  go to state 20


state 12

    1 document: prolog element misc_seq_opt .
    7 misc_seq_opt: misc_seq_opt . misc

    STARTPI  shift, and go to state 13
    COMMENT  shift, and go to state 14

    $default  reduce using rule 1 (document)

    misc  go to state 15
    PI    go to state 16


state 13

   11 PI: STARTPI . NAME DATA ENDPI
   12   | STARTPI . NAME ENDPI

    NAME  shift, and go to state 21


state 14

    9 misc: COMMENT .

    $default  reduce using rule 9 (misc)


state 15

    7 misc_seq_opt: misc_seq_opt misc .

    $default  reduce using rule 7 (misc_seq_opt)


state 16

   10 misc: PI .

    $default  reduce using rule 10 (misc)


state 17

   27 attribute: NAME . EQ VALUE

    EQ  shift, and go to state 22


state 18

    5 XMLDecl_opt: STARTXMLDECL $@1 attribute_seq_opt $@2 . ENDPI

    ENDPI  shift, and go to state 23


state 19

   25 attribute_seq_opt: attribute_seq_opt attribute .

    $default  reduce using rule 25 (attribute_seq_opt)


state 20

   14 element: START $@3 attribute_seq_opt . empty_or_content
   25 attribute_seq_opt: attribute_seq_opt . attribute

    SLASH  shift, and go to state 24
    CLOSE  shift, and go to state 25
    NAME   shift, and go to state 17

    empty_or_content  go to state 26
    attribute         go to state 19


state 21

   11 PI: STARTPI NAME . DATA ENDPI
   12   | STARTPI NAME . ENDPI

    ENDPI  shift, and go to state 27
    DATA   shift, and go to state 28


state 22

   27 attribute: NAME EQ . VALUE

    VALUE  shift, and go to state 29


state 23

    5 XMLDecl_opt: STARTXMLDECL $@1 attribute_seq_opt $@2 ENDPI .

    $default  reduce using rule 5 (XMLDecl_opt)


state 24

   15 empty_or_content: SLASH . CLOSE

    CLOSE  shift, and go to state 30


state 25

   17 empty_or_content: CLOSE . $@4 content END name_opt CLOSE

    $default  reduce using rule 16 ($@4)

    $@4  go to state 31


state 26

   14 element: START $@3 attribute_seq_opt empty_or_content .

    $default  reduce using rule 14 (element)


state 27

   12 PI: STARTPI NAME ENDPI .

    $default  reduce using rule 12 (PI)


state 28

   11 PI: STARTPI NAME DATA . ENDPI

    ENDPI  shift, and go to state 32


state 29

   27 attribute: NAME EQ VALUE .

    $default  reduce using rule 27 (attribute)


state 30

   15 empty_or_content: SLASH CLOSE .

    $default  reduce using rule 15 (empty_or_content)


state 31

   17 empty_or_content: CLOSE $@4 . content END name_opt CLOSE

    $default  reduce using rule 22 (content)

    content  go to state 33


state 32

   11 PI: STARTPI NAME DATA ENDPI .

    $default  reduce using rule 11 (PI)


state 33

   17 empty_or_content: CLOSE $@4 content . END name_opt CLOSE
   18 content: content . DATA
   19        | content . misc
   21        | content . $@5 element

    STARTPI  shift, and go to state 13
    END      shift, and go to state 34
    DATA     shift, and go to state 35
    COMMENT  shift, and go to state 14

    $default  reduce using rule 20 ($@5)

    misc  go to state 36
    PI    go to state 16
    $@5   go to state 37


state 34

   17 empty_or_content: CLOSE $@4 content END . name_opt CLOSE

    NAME  shift, and go to state 38

    $default  reduce using rule 24 (name_opt)

    name_opt  go to state 39


state 35

   18 content: content DATA .

    $default  reduce using rule 18 (content)


state 36

   19 content: content misc .

    $default  reduce using rule 19 (content)


state 37

   21 content: content $@5 . element

    START  shift, and go to state 7

    element  go to state 40


state 38

   23 name_opt: NAME .

    $default  reduce using rule 23 (name_opt)


state 39

   17 empty_or_content: CLOSE $@4 content END name_opt . CLOSE

    CLOSE  shift, and go to state 41


state 40

   21 content: content $@5 element .

    $default  reduce using rule 21 (content)


state 41

   17 empty_or_content: CLOSE $@4 content END name_opt CLOSE .

    $default  reduce using rule 17 (empty_or_content)
